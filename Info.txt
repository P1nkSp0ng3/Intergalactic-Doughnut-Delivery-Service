Technology Stack:
=================
	Node.js (`node -v` to get version and make sure it's installed) --- Node.js is a JavaScript runtime that lets you run JavaScript outside the browser — usually on the server.
	Express
	SQLite --- the db
	Docker (containerisation)



Commands:
=============
	node server.js
		Command used to start the server, which then executes the app.js file
			This is only needed if nodemon isn't used

	npm (node package manager) --- we'll use this to install a few dependencies
		npm init --- creates a new Node.js project by creating a package.json file, which is essential for managing dependencies, scripts, and metadata for your app
		npm install --save express = installing dependencies for the API
			--save = creates an entry in the package.json file
			express = Express.js is a web framework for Node.js that makes it super easy to build APIs, web apps, and server logic.

			when you run this, a package-lock.json file will be auto created by npm
				The package-lock.json file is automatically generated by npm when you install packages.
				It locks in the exact versions of every package (and their dependencies), ensuring that:
					Your app runs the same way every time on every machine
					The dependencies don’t unexpectedly change in the future

		npm install --save-dev nodemon
			Nodemon is a utility that monitors for any changes in your source code and automatically restarts your Node.js application
			The package.json file will be updated to include nodemon once it is installed

		With nodemon installed, edit the `scripts` JSON object in the package.json file to include start": "nodemon server.js" on a new line
			run npm start and nodemon will start

		npm install --save morgan
			morgan is a logging package for Node.js, so this will let us see what calls are being made to the different endpoints

		npm install --save body-parser
			This package is used to parse the body of incoming requests, as the body is not nicely formatted or easily readable by default in node.js, so we can use the data
				body-parser supports URL encoded bodies and JSON data (such as receiveing a POST request containing JSON data)

		npm install --save mongoose
			This package is used to connect to a MongoDB database. It can be used to perform queries to retrieve, update, and delete data within a database

		npm install --save multer
			This package is used for file upload functionalities within APIs

		npm install --save bcrypt
			This package is used to hash passwords

		npm install --save jsonwebtoken
			This package (node-jsonwebtoken) is used to create and handle JWTs





Files:
======
server.js --- contains the code to spin up the node.js server
app.js --- spins up the express application

node server.js --- this will execute the server file, i.e. spin up the server



Other Concepts:
===============
Middleware = In Express.js, middleware is a function that runs between the time a request is received and the time a response is sent. Think of it as a series of steps that every request goes through before reaching your route handler — or even instead of it.

